(this["webpackJsonpcourse-tree-frontend"]=this["webpackJsonpcourse-tree-frontend"]||[]).push([[0],{10:function(e){e.exports=JSON.parse('{"COMP 140":{},"COMP 382":{"val":"COMP 182","type":"leaf"},"COMP 380":{"val":"COMP 182","type":"leaf"},"COMP 414":{},"COMP 535":{},"COMP 415":{"val":"COMP 410","type":"leaf"},"COMP 536":{"val":[{"val":"COMP 327","type":"leaf"},{"val":"COMP 427","type":"leaf"},{"val":"COMP 541","type":"leaf"},{"val":"COMP 429","type":"leaf"},{"val":"COMP 556","type":"leaf"},{"val":"ELEC 429","type":"leaf"},{"val":"ELEC 556","type":"leaf"},{"val":"COMP 421","type":"leaf"},{"val":"COMP 521","type":"leaf"},{"val":"ELEC 421","type":"leaf"},{"val":"ELEC 552","type":"leaf"},{"val":"ELEC 437","type":"leaf"},{"val":"ELEC 539","type":"leaf"}],"type":"or"},"COMP 412":{"val":[{"val":[{"val":"COMP 314","type":"leaf"},{"val":"ELEC 322","type":"leaf"},{"val":"COMP 310","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 533":{},"COMP 413":{"val":"COMP 310","type":"leaf"},"COMP 534":{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"},"COMP 410":{"val":[{"val":"COMP 310","type":"leaf"},{"val":"COMP 314","type":"leaf"}],"type":"or"},"COMP 498":{"val":[{"val":"MATH 354","type":"leaf"},{"val":"MATH 355","type":"leaf"},{"val":"CAAM 335","type":"leaf"}],"type":"or"},"COMP 531":{},"COMP 411":{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 310","type":"leaf"}],"type":"or"},"COMP 532":{"val":[{"val":"COMP 421","type":"leaf"},{"val":"COMP 521","type":"leaf"}],"type":"or"},"COMP 496":{},"COMP 650":{},"COMP 530":{"val":[{"val":"COMP 321","type":"leaf"},{"val":"COMP 430","type":"leaf"}],"type":"and"},"COMP 539":{"val":[{"val":"COMP 404","type":"leaf"},{"val":"COMP 504","type":"leaf"}],"type":"or"},"COMP 416":{"val":"COMP 182","type":"leaf"},"COMP 417":{"val":[{"val":"COMP 421","type":"leaf"},{"val":"ELEC 421","type":"leaf"}],"type":"or"},"COMP 538":{},"COMP 550":{"val":[{"val":"COMP 215","type":"leaf"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 390":{},"COMP 425":{"val":[{"val":"ELEC 326","type":"leaf"},{"val":"COMP 326","type":"leaf"}],"type":"or"},"COMP 546":{},"COMP 547":{},"COMP 544":{},"COMP 665":{},"COMP 424":{"val":"ELEC 220","type":"leaf"},"COMP 545":{},"COMP 300":{},"COMP 421":{"val":[{"val":"COMP 215","type":"leaf"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 542":{},"COMP 301":{},"COMP 422":{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"},"COMP 543":{},"COMP 540":{"val":[{"val":[{"val":"STAT 331","type":"leaf"},{"val":"STAT 310","type":"leaf"},{"val":"ECON 307","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 355","type":"leaf"},{"val":"CAAM 335","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 420":{"val":[{"val":"COMP 421","type":"leaf"},{"val":"ELEC 421","type":"leaf"}],"type":"or"},"COMP 541":{"val":"COMP 310","type":"leaf"},"COMP 429":{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"},"COMP 427":{"val":[{"val":"COMP 310","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"and"},"COMP 548":{},"COMP 549":{},"COMP 360":{"val":[{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"},{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 280","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 211","type":"leaf"},{"val":"MATH 212","type":"leaf"},{"val":"MATH 221","type":"leaf"},{"val":"MATH 222","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 354","type":"leaf"},{"val":"MATH 355","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 481":{},"COMP 361":{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 215","type":"leaf"},{"val":[{"val":"MATH 101","type":"leaf"},{"val":"MATH 105","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 102","type":"leaf"},{"val":"MATH 106","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 480":{},"COMP 238":{},"COMP 513":{},"COMP 514":{},"COMP 511":{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 310","type":"leaf"}],"type":"or"},"COMP 512":{},"COMP 630":{},"COMP 477":{},"COMP 598":{},"COMP 519":{},"COMP 517":{},"COMP 515":{"val":"COMP 412","type":"leaf"},"COMP 516":{"val":[{"val":"COMP 413","type":"leaf"},{"val":"COMP 420","type":"leaf"},{"val":[{"val":"COMP 520","type":"leaf"},{"val":"ELEC 520","type":"leaf"}],"type":"or"}],"type":"or"},"COMP 130":{},"COMP 490":{},"COMP 370":{},"COMP 491":{},"COMP 403":{"val":[{"val":"COMP 482","type":"leaf"},{"val":"COMP 409","type":"leaf"},{"val":"COMP 509","type":"leaf"},{"val":[{"val":"COMP 382","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"and"}],"type":"or"},"COMP 524":{"val":[{"val":"COMP 429","type":"leaf"},{"val":"ELEC 429","type":"leaf"}],"type":"or"},"COMP 645":{},"COMP 525":{"val":[{"val":"ELEC 425","type":"leaf"},{"val":"COMP 425","type":"leaf"}],"type":"or"},"COMP 800":{},"COMP 522":{"val":[{"val":"COMP 425","type":"leaf"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 643":{"val":"COMP 630","type":"leaf"},"COMP 402":{"val":[{"val":"COMP 310","type":"leaf"},{"val":"COMP 411","type":"leaf"},{"val":"COMP 510","type":"leaf"},{"val":"COMP 511","type":"leaf"}],"type":"or"},"COMP 523":{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 448","type":"leaf"},{"val":"MATH 448","type":"leaf"},{"val":"MATH 365","type":"leaf"}],"type":"or"},"COMP 487":{"val":[{"val":"COMP 382","type":"leaf"},{"val":"COMP 409","type":"leaf"},{"val":"COMP 509","type":"leaf"},{"val":"COMP 481","type":"leaf"},{"val":"COMP 581","type":"leaf"}],"type":"or"},"COMP 520":{},"COMP 521":{"val":[{"val":"COMP 215","type":"leaf"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 642":{"val":"COMP 682","type":"leaf"},"COMP 485":{},"COMP 486":{"val":[{"val":"ELEC 485","type":"leaf"},{"val":"BIOE 485","type":"leaf"},{"val":"COMP 485","type":"leaf"}],"type":"or"},"COMP 640":{},"COMP 409":{"val":[{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 280","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 528":{"val":[{"val":"COMP 421","type":"leaf"},{"val":"COMP 521","type":"leaf"}],"type":"or"},"COMP 408":{},"COMP 529":{"val":[{"val":"COMP 429","type":"leaf"},{"val":"ELEC 429","type":"leaf"}],"type":"or"},"COMP 405":{"val":"COMP 310","type":"leaf"},"COMP 526":{},"COMP 527":{},"COMP 340":{"val":[{"val":"COMP 140","type":"leaf"},{"val":[{"val":"MATH 212","type":"leaf"},{"val":"MATH 222","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 582":{"val":[{"val":"STAT 310","type":"leaf"},{"val":"ECON 307","type":"leaf"},{"val":"STAT 331","type":"leaf"},{"val":"ELEC 331","type":"leaf"},{"val":"ELEC 303","type":"leaf"},{"val":"STAT 312","type":"leaf"}],"type":"or"},"COMP 580":{},"COMP 460":{},"COMP 581":{},"COMP 182":{"val":[{"val":"COMP 130","type":"leaf"},{"val":"COMP 140","type":"leaf"},{"val":"COMP 160","type":"leaf"}],"type":"or"},"COMP 180":{"val":[{"val":"COMP 130","type":"leaf"},{"val":"COMP 140","type":"leaf"},{"val":"COMP 160","type":"leaf"}],"type":"or"},"COMP 613":{},"COMP 610":{"val":"COMP 613","type":"leaf"},"COMP 215":{"val":"COMP 182","type":"leaf"},"COMP 611":{},"COMP 696":{},"COMP 576":{},"COMP 573":{},"COMP 694":{},"COMP 591":{},"COMP 590":{},"COMP 502":{},"COMP 503":{"val":[{"val":"COMP 482","type":"leaf"},{"val":"COMP 409","type":"leaf"},{"val":"COMP 509","type":"leaf"},{"val":[{"val":"COMP 382","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"and"}],"type":"or"},"COMP 621":{"val":[{"val":"COMP 625","type":"leaf"},{"val":"COMP 613","type":"leaf"}],"type":"and"},"COMP 105":{},"COMP 347":{"val":[{"val":"COMP 182","type":"leaf"},{"val":[{"val":"STAT 310","type":"leaf"},{"val":"ECON 307","type":"leaf"},{"val":"STAT 315","type":"leaf"},{"val":"DSCI 301","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 501":{"val":[{"val":"COMP 310","type":"leaf"},{"val":"COMP 411","type":"leaf"},{"val":"COMP 510","type":"leaf"},{"val":"COMP 511","type":"leaf"}],"type":"or"},"COMP 587":{"val":[{"val":"COMP 382","type":"leaf"},{"val":"COMP 409","type":"leaf"},{"val":"COMP 509","type":"leaf"},{"val":"COMP 481","type":"leaf"},{"val":"COMP 581","type":"leaf"}],"type":"or"},"COMP 620":{},"COMP 100":{},"COMP 508":{},"COMP 509":{},"COMP 506":{},"COMP 507":{"val":[{"val":"COMP 481","type":"leaf"},{"val":[{"val":"COMP 482","type":"leaf"},{"val":"ELEC 420","type":"leaf"}],"type":"or"}],"type":"or"},"COMP 628":{},"COMP 504":{},"COMP 625":{},"COMP 505":{"val":[{"val":"COMP 404","type":"leaf"},{"val":"COMP 504","type":"leaf"},{"val":"COMP 310","type":"leaf"}],"type":"or"},"COMP 560":{},"COMP 440":{"val":[{"val":"COMP 310","type":"leaf"},{"val":[{"val":"STAT 310","type":"leaf"},{"val":"ECON 307","type":"leaf"},{"val":"ECON 382","type":"leaf"},{"val":"STAT 312","type":"leaf"},{"val":"STAT 331","type":"leaf"},{"val":"ELEC 331","type":"leaf"},{"val":"ELEC 303","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 354","type":"leaf"},{"val":"MATH 355","type":"leaf"},{"val":"CAAM 335","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 561":{},"COMP 682":{},"COMP 162":{},"COMP 680":{},"COMP 160":{},"COMP 436":{"val":[{"val":"COMP 327","type":"leaf"},{"val":"COMP 427","type":"leaf"},{"val":"COMP 541","type":"leaf"},{"val":"COMP 429","type":"leaf"},{"val":"COMP 556","type":"leaf"},{"val":"ELEC 429","type":"leaf"},{"val":"ELEC 556","type":"leaf"},{"val":"COMP 421","type":"leaf"},{"val":"COMP 521","type":"leaf"},{"val":"ELEC 421","type":"leaf"},{"val":"ELEC 552","type":"leaf"},{"val":"ELEC 437","type":"leaf"},{"val":"ELEC 539","type":"leaf"}],"type":"or"},"COMP 557":{"val":[{"val":"COMP 310","type":"leaf"},{"val":[{"val":"STAT 310","type":"leaf"},{"val":"ECON 307","type":"leaf"},{"val":"ECON 382","type":"leaf"},{"val":"STAT 312","type":"leaf"},{"val":"STAT 331","type":"leaf"},{"val":"ELEC 331","type":"leaf"},{"val":"ELEC 303","type":"leaf"}],"type":"or"},{"val":[{"val":"MATH 354","type":"leaf"},{"val":"MATH 355","type":"leaf"},{"val":"CAAM 335","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 316":{},"COMP 555":{},"COMP 435":{},"COMP 556":{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"},"COMP 677":{},"COMP 311":{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},"COMP 554":{},"COMP 430":{"val":[{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 280","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 310":{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},"COMP 431":{},"COMP 450":{"val":[{"val":"COMP 215","type":"leaf"},{"val":[{"val":"COMP 221","type":"leaf"},{"val":"COMP 321","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 571":{},"COMP 330":{"val":[{"val":"COMP 215","type":"leaf"},{"val":[{"val":"MATH 211","type":"leaf"},{"val":"MATH 221","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 451":{},"COMP 572":{},"COMP 693":{},"COMP 690":{},"COMP 290":{},"COMP 326":{"val":"ELEC 220","type":"leaf"},"COMP 447":{"val":[{"val":"ELEC 301","type":"leaf"},{"val":"ELEC 475","type":"leaf"},{"val":"COMP 314","type":"leaf"},{"val":"ELEC 322","type":"leaf"},{"val":"COMP 330","type":"leaf"}],"type":"or"},"COMP 601":{},"COMP 327":{"val":[{"val":"COMP 310","type":"leaf"},{"val":"COMP 314","type":"leaf"},{"val":"ELEC 322","type":"leaf"}],"type":"or"},"COMP 448":{"val":"COMP 182","type":"leaf"},"COMP 602":{"val":[{"val":"ELEC 502","type":"leaf"},{"val":"COMP 502","type":"leaf"},{"val":"STAT 502","type":"leaf"}],"type":"or"},"COMP 446":{},"COMP 600":{},"COMP 322":{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"},"COMP 323":{"val":[{"val":"COMP 182","type":"leaf"},{"val":"COMP 448","type":"leaf"},{"val":"MATH 448","type":"leaf"},{"val":"MATH 365","type":"leaf"}],"type":"or"},"COMP 441":{"val":[{"val":"COMP 440","type":"leaf"},{"val":"ELEC 440","type":"leaf"}],"type":"or"},"COMP 200":{},"COMP 321":{"val":[{"val":"ELEC 220","type":"leaf"},{"val":[{"val":"COMP 211","type":"leaf"},{"val":"COMP 215","type":"leaf"}],"type":"or"}],"type":"and"},"COMP 607":{},"COMP 449":{}}')},31:function(e){e.exports=JSON.parse('{"COMP 140":"Description: An introduction to computational problem solving designed to give an overview of computer science using real-world problems across a broad range of disciplines. Students learn how to think about these problems and how to structure effective solutions to them using computation. No programming knowledge is required or expected; students learn how to implement their solutions in Python. If you register for fully online section, you must have a webcam and you must take the exams in person.","COMP 382":"Description: Writing algorithms is fun, but how are you sure that the algorithm you wrote is flawless? Are there computing tasks for which it is impossible to produce an efficient algorithm, or, for that matter, any algorithm? To answer these questions, you have to learn to perform mathematical reasoning about algorithmic problems and solutions COMP 382 is an introduction to such reasoning techniques. Topics covered would include elementary logic, analysis of the correctness and efficiency of algorithms, and formal computational models like finite automata and Turning machines. On the way, you are also going to learn some new algorithm design techniques.","COMP 380":"Description: We introduce algorithms, algorithmic techniques, and some discrete math with a decidedly practical bent. This will improve anyone\u2019s programming skills, but with specific application towards programming contests and programming-oriented job interviews. This also provides optional additional preparation for COMP 382. Features both individual and small-group exercises in a hands-on class.","COMP 414":"Description: The main focus of the course will be on smooth optimization techniques, with applications in machine learning and artificial intelligence. The course will introduce the basics of algorithms on continuous optimization, starting from the classical gradient descent algorithm in convex optimization, towards more sophisticated approaches in non-convex scenarios. The course will explore the fundamental theory, algorithms, complexity and approximations in nonlinear optimization. Graduate/Undergraduate Equivalency: COMP 514. Mutually Exclusive: Cannot register for COMP 414 if student has credit for COMP 514.","COMP 535":"Description: Survey this radical concept of approximate (or inexact) computing with the goal of understanding both of the challenges and opportunities at all layers of the computing system ranging over programming languages, compilers and run-time, and architecture.","COMP 415":"Description: Experience real customers, software, and situations. The class will be contracted by an industrial customer to design build, and deliver a product. Negotiate to finalize specifications, updates, and delivery schedules Encounter real-life issues such as team management, intellectual property, and vagueness and specification changes while developing a state-of-the-art software application.","COMP 536":"Description: What is \u201ccloud computing?\u201d How do we build cloud-scale systems and components that are secure against malicious attacks, and scale to millions of users? Many of today\u2019s services run inside the cloud \u2013 a set of geographically distributed data centers running heterogeneous software stacks. Cloud systems must scale across tens of thousands of machines, support millions of concurrent requests, and they must do so with high security guarantees. This course will start with the fundamentals of cloud computing, introduce key techniques in building scalable and secure systems and expose students to state-of-the-art research advances as well as emerging security threats and defenses in today\u2019s cloud systems. Cross-list: ELEC 510. Graduate/Undergraduate Equivalency: COMP 436. Mutually Exclusive: Cannot register for COMP 536 if student has credit for COMP 436.","COMP 412":"Description: Topics in the design of programming language translators, including parsing, run-time storage management, error recovery, code generation and optimization. Graduate/Undergraduate Equivalency: COMP 506. Recommended Prerequisite(s): COMP 412 or COMP 506. Mutually Exclusive: Cannot register for COMP 412 if student has credit for COMP 506.","COMP 533":"Description: Introduction to relational and other database systems, SQL programming, Database application programming, and Database design. Graduate/Undergraduate Equivalency: COMP 430. Mutually Exclusive: Cannot register for COMP 533 if student has credit for COMP 430.","COMP 413":"Description: This course focuses on modern principles for the construction of distributed programs, with an emphasis on design patterns, modern programming tools, and distributed object systems. The material will be applied in a substantial software design/construction project.","COMP 534":"Description: COMP 422 is an undergraduate version of this course. COMP 422 students will have four programming assignments. COMP 534 students will have five. As part of their assignments, both COMP 422 and COMP 534 students will analyze the scalability and parallel efficiency of parallel programs they write. COMP 534 students will additionally use tools to qualify the root causes of scaling losses in their programs and document their findings. Graduate/Undergraduate Equivalency: COMP 422. Mutually Exclusive: Cannot register for COMP 534 if student has credit for COMP 422.","COMP 410":"Description: COMP 410 is a pure discovery-based learning course designed to give students real-life, hands-on training in a wide variety of software engineering issues that arise in creating large-scale, state-of-the-art software systems. The class forms a small software development \\"company\\" that works to deliver a product to a customer. The topics encountered include and are not limited to, dealing with new technologies (e.g. C#, .NET, distributed computing), advanced object-oriented programming and design, interacting with customers, problem specification and tasking, individual and group communications, human resource management, group leadership, testing, integration and documentation. Traditional development cycle methodologies will be compared to recent, \\"agile\\" techniques. Graduate/Undergraduate Equivalency: COMP 539. Mutually Exclusive: Cannot register for COMP 410 if student has credit for COMP 539.","COMP 498":"Description: The course will provide the student with a mathematical introduction to many of the key ideas used in today\'s intelligent robot systems. The focus of the course is on the analysis and control of manipulators. The course will also give an overview of common approaches to building intelligent robot systems. Cross-list: ELEC 498, MECH 498. Graduate/Undergraduate Equivalency: COMP 598. Recommended Prerequisite(s): MECH 211 or CEVE 211 or MECH 310 Mutually Exclusive: Cannot register for COMP 498 if student has credit for COMP 598.","COMP 531":"Description: This project-based course explores Web application creation and design. Students are involved in the development of front-end and back-end systems while interfacting client-server communications technologies. Students will evaluate Web structural frameworks, Web development technologies, apply test driven development, and create multi-user Web applications. Graduate/Undergraduate Equivalency: COMP 431. Recommended Prerequisite(s): COMP 310 or COMP 321 Mutually Exclusive: Cannot register for COMP 531 if student has credit for COMP 431.","COMP 411":"Description: The design, definition and abstract implementation of programming languages including methods for precisely specifying syntax and semantics. Graduate/Undergraduate Equivalency: COMP 511. Mutually Exclusive: Cannot register for COMP 411 if student has credit for COMP 511.","COMP 532":"Description: Introduction to distributed computer systems. The course covers concepts, architecture, algorithms, protocols, and implementation, focusing on distribution, scale, robustness in the face of failure, and security. Additional coursework required beyond the UG course requirements. Graduate/Undergraduate Equivalency: COMP 420. Mutually Exclusive: Cannot register for COMP 532 if student has credit for COMP 420.","COMP 496":"Description: A seminar course to introduce students to topics in Data Science at the interface between Statistics and Computer Science. Students participate in the process of preparing, delivering and critiquing talks. Topics change each semester. Instructor Permission Required. Cross-list: STAT 496. Graduate/Undergraduate Equivalency: COMP 696. Mutually Exclusive: Cannot register for COMP 496 if student has credit for COMP 696. Repeatable for Credit.","COMP 650":"Description: Methods, tools and theories for reasoning about problems with physical constraints. The student may elect to perform a project to receive more than 1 credit hour. Instructor Permission Required. Repeatable for Credit.","COMP 530":"Description: This course covers database management system architecture, query processing and optimization, transaction processing, concurrent control and recover, storage, indexing structures and related topics. Students will build a database system from the ground up. Graduate students who have not had an introductory database course should enroll for 4 credits: all others should enroll for 3 credits.","COMP 539":"Description: COMP 539 is a pure discovery-based learning course designed to give students real-life, hands-on training in a wide variety of software engineering issues that arise in creating large-scale, state-of-the-art software systems. The class forms a small software development \\"company\\" that works to deliver a product to a customer. The topics encountered include and are not limited to, dealing with new technologies (e.g. C#, .NET, distributed computing), advanced object-oriented programming and design, interacting with customers, problem specification and tasking, individual and group communications, human resource management, group leadership, testing, integration and documentation. Traditional development cycle methodologies will be compared to recent, \\"agile\\" techniques. Graduate/Undergraduate Equivalency: COMP 410. Recommended Prerequisite(s): COMP 505 Mutually Exclusive: Cannot register for COMP 539 if student has credit for COMP 410.","COMP 416":"Description: Since the advent of Sanger Sequencing in 1977, computer scientists have been devising algorithms and software tools to interpret and analyze DNA sequences. The field of bioinformatics focuses on computational approaches to solving biological questions. This course will serve as an introduction to widely used algorithms in bioinformatics used for pattern searching, genome assembly, sequence alignment, and clustering of biological data. No prior knowledge of biology is assumed. The class involves several programming assignments. Graduate/Undergraduate Equivalency: COMP 519.","COMP 417":"Description: In this seminar, we will investigate advanced topics in the design and implementation of operating systems, including: OS structure (includingWeb Browsers), concurrency and synchronization, memory management, file systems and storage, virtual machines, and information protection. We will explore both fundamental and hot topics through reading, discussing, and presenting key research findings. This course will also cover methods for critiquing, writing, and presenting research findings through a course long project. Graduate/Undergraduate Equivalency: COMP 517. Mutually Exclusive: Cannot register for COMP 417 if student has credit for COMP 517.","COMP 538":"Description: The course covers wide range of topics pertaining to security of Hardware Embedded system, including cryptographic processors, secure memory access, hardware IT protection by monitoring and watermarking FPGA security, physical and side-charmed attacks, Trojan horses. Cross-list: ELEC 528. Repeatable for Credit.","COMP 550":"Description: Robots have fascinated people for generations. Today, robots are built for applications as diverse as exploring remote planets, de-mining war zones, cleaning toxic waste, assembling cars, inspecting pipes in industrial plants and mowing lawns. Robots are also interacting with humans in a variety of ways: robots are museum guides, robots assist surgeon sin life threatening operations, and robotic cars can drive us around. The field of robotics studies not only the design of new mechanisms but also the development of artificial intelligence frameworks to make these mechanism useful in the physical world, integrating computer science, engineering, mathematics and more recently biology and sociology, in a unique way. This class will present fundamental algorithmic advances that enable today\u2019s robots to move in real environments and plan their actions. It will also explore fundamentals of the field of Artificial Intelligence through the prism of robotics. The class involves a significant programming project. Cross-list: ELEC 550, MECH 550. Graduate/Undergraduate Equivalency: COMP 450. Mutually Exclusive: Cannot register for COMP 550 if student has credit for COMP 450.","COMP 390":"Description: Theoretical and experimental investigations under staff direction. Credit cannot be received for both COMP 290 and COMP 390. Instructor Permission Required. Equivalency: COMP 290. Mutually Exclusive: Cannot register for COMP 390 if student has credit for COMP 290. Repeatable for Credit.","COMP 425":"Description: Evolution of key architecture concepts found in advanced uniprocessor systems. Fundamental and advanced pipelining techniques and associated issues for improving processor performance. Illustrated with RISC processors such as the ARM processor. Examine several metrics for processor performance, such as Amdahl\u2019s law. Key concepts of data and program memory systems found in modern systems with memory hierarchies and cashes. Perform experiments in cache performance analysis. Influence of technology trends, such as Moore\u2019s law, on processor implementation Approaches for exploiting instruction level parallelism, such as VLIW. Introduction to parallel and multicore architectures. Introduction to processor architectures targeted for imbedded applications. Cross-list: ELEC 425. Graduate/Undergraduate Equivalency: COMP 554. Mutually Exclusive: Cannot register for COMP 425 if student has credit for COMP 554.","COMP 546":"Description: An introduction to the basic concepts, algorithms and applications in computer vision. Topics include: cameras, camera models and imaging pipeline, low-level vision/image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, introduction to high-level vision tasks such as object recognition and face recognition. The course will involve programming and implementing basic computer vision algorithms in Matlab. Additional coursework required beyond the undergraduate course requirements. Cross-list: ELEC 546. Graduate/Undergraduate Equivalency: COMP 447. Mutually Exclusive: Cannot register for COMP 546 if student has credit for COMP 345/COMP 447.","COMP 547":"Description: We will review, critique, and discuss computational methods and approaches for microbial forensics and infectious disease monitoring in the genomics era. The seminar will be divided into topic-specific sessions, focusing on emerging research trends and open challenges in the field. Graduate/Undergraduate Equivalency: COMP 347. Mutually Exclusive: Cannot register for COMP 547 if student has credit for COMP 347.","COMP 544":"Description: An introduction to concepts, principles, and approaches of functional programming. Functional programming is a style of programming where the key means of computation is the application of functions to arguments (which themselves might be functions). This style of programming has become increasingly popular in recent years because it offers important advantages in designing, maintaining, and reasoning about programs in many modern contexts such as web services, multicore programming, and cluster computing. Course work consists of a series of programming assignments in the Scala programming language and various library extensions such as Apache Spark. Graduate/Undergraduate Equivalency: COMP 311. Mutually Exclusive: Cannot register for COMP 544 if student has credit for COMP 311.","COMP 665":"Description: Data is being generated by humans and algorithms at an astounding rate. Having the ability to analyze and interpret this data visually is a key technique for coping with this explosion. This class will cover the basic ways that various types of data can be visualized and what properties distinguish useful visualizations from not so useful ones. The class will use Python as both the primary tool for processing the data as well creating visualizations of this data. To enhance the students\u2019 depth of knowledge, the class will also cover some of the geometric algorithms used to create advanced visualizations.","COMP 424":"Description: ELEC 424 introduces mobile and embedded system design and applications to undergraduate students and provides them hands-on design experience. It consists of three interlearning parts: lectures, student project, and student presentations. Cross-list: ELEC 424.","COMP 545":"Description: COMP 545 is a graduate-level course on optimization techniques and algorithms, as these are used in modern ML/AI/SP tasks. During this course, we will learn and study the above topics (both in depth and breadth). The course i) will focus on different objective classes (convex vs. non-convex objectives, with constraints or not, etc.), ii) will cover different optimization strategies within each class, iii) will study algorithmic choices based on computational resources (e.g., use of low-dimensional structures (when/why), asynchronous vs. synchronous algorithms, distributed algorithms, etc.) and iv) lastly, will study schemes that handle some specific, but well-spread optimization constraints (sparsity, low-rankness).The main objective of the course is to highlight optimization as a vital part of contemporary research in ML/AI/SP, and draw the attention of students to open-questions in related topics. In particular, the aim for students is to i) learn how to distinguish differences in research papers of related fields, ii) understand the connection between them and how researchers advance each area, and iii) be able to consider possible extensions of these works, as part of the final (open-ended) project of the course. Repeatable for Credit.","COMP 300":"Description: We will review the remarkable technology of the Information Age and examine its effects on the ways in which we live, work and think about the world around us. We will consider, for example, how the pervasive use of computers and networks is changing our ideas about property, privacy, authority, social relations, knowledge and identity. And we will discuss what further changes we might see as technology continues to advance.","COMP 421":"Description: Introduction to the design, construction, and analysis of concurrent programs with an emphasis on operating systems, including filing systems, schedulers, and memory allocators. Specific attention is devoted to process synchronization and communication within concurrent programs. Cross-list: ELEC 421. Graduate/Undergraduate Equivalency: COMP 521. Mutually Exclusive: Cannot register for COMP 421 if student has credit for COMP 521.","COMP 542":"Description: Learning from large dataset is becoming a ubiquitous phenomena in all applications spanning robotics, medical decisions, internet, communication, biology, etc. Designed to give senior UG students a thorough grounding in the theory and algorithms needed for research and practical applications in machine learning for modern massive datasets. Topics draw from machine learning, classical statistics, algorithms and information theory. Graduate/Undergraduate Equivalency: COMP 441. Mutually Exclusive: Cannot register for COMP 542 if student has credit for COMP 441.","COMP 301":"Description: Given their growing power in the twenty-first century, computer scientists have duties both to society and their own profession to wield that power wisely and responsibly. In this discussion-and reflection-oriented course students will apply fundamentals of moral philosophy and social responsibility to current issues in computer science.","COMP 422":"Description: COMP 422 is an undergraduate version of this course. COMP 422 students will have four programming assignments. COMP 534 students will have five. As part of their assignments, both COMP 422 and COMP 534 students will analyze the scalability and parallel efficiency of parallel programs they write. COMP 534 students will additionally use tools to qualify the root causes of scaling losses in their programs and document their findings. Graduate/Undergraduate Equivalency: COMP 534. Mutually Exclusive: Cannot register for COMP 422 if student has credit for COMP 534.","COMP 543":"Description: This course is an introduction to modern data science. Data science is the study of how to extract actionable, non-trivial knowledge from data. The course will focus on the software tools used by practitioners of modern data science, the mathematical and statistical models that are employed in conjunction with such software tools and the applications of these tools and systems to different problems and domains. On the tools side, we will cover the basics of relational database systems, as well as modern systems for manipulating large data sets such as Hadoop MapReduce, Apache Spark, and Google\u2019s TensorFlow. On the model side, the course will cover standard supervised and unsupervised models for data analysis and pattern discovery. Mathematical sophistication (calculus, statistics) and programming skills that would be acquired in an undergraduate computer science program are expected. Most programming will be in Python and SQL. (SQL is covered in the course) with some Java. Graduate/Undergraduate Equivalency: COMP 330. Mutually Exclusive: Cannot register for COMP 543 if student has credit for COMP 330.","COMP 540":"Description: COMP 540 is about learning models from data. The course is designed to give students a foundational understanding of modern algorithms in learning and data mining, as well as hands-on experience with its applications in science and engineering.","COMP 420":"Description: Introduction to distributed computer systems. The course covers concepts, architecture, algorithms, protocols, and implementation, focusing on distribution, scale, robustness in the face of failure, and security. Graduate/Undergraduate Equivalency: COMP 532. Mutually Exclusive: Cannot register for COMP 420 if student has credit for COMP 532.","COMP 541":"Description: This elective course covers a wide variety of topics in computer security, including hands-on experience w/breaking software & engineering software to be harder to break. For example, students will perform buffer overflow attacks & exploit web application vulnerabilities, while also learning how to defend against them. Graduate/Undergraduate Equivalency: COMP 327, COMP 427. Mutually Exclusive: Cannot register for COMP 541 if student has credit for COMP 327/COMP 427.","COMP 429":"Description: Network architectures, algorithms, and protocols. Local- and Wide-area networking. Intra- and inter-domain routing. Transmission reliability. Flow and congestion control. TCP/IP. Multicast. Quality of Service. Network Security - Networked applications. Cross-list: ELEC 429. Graduate/Undergraduate Equivalency: COMP 556. Mutually Exclusive: Cannot register for COMP 429 if student has credit for COMP 556.","COMP 427":"Description: This elective course covers a wide variety of topics in computer security, including hands-on experience w/breaking software & engineering software to be harder to break. For example, students will perform buffer overflow attacks & exploit web application vulnerabilities, while also learning how to defend against them. Graduate/Undergraduate Equivalency: COMP 327, COMP 541. Mutually Exclusive: Cannot register for COMP 427 if student has credit for COMP 327/COMP 541.","COMP 548":"Description: The course will explore the mathematical underpinnings of reliable software. The students will learn how to use proof assistants to construct software along with a machine-checkable proof of its correctness. Basic concepts of logic, functional programming, static type systems and deductive verification will be covered. Graduate/Undergraduate Equivalency: COMP 408.","COMP 549":"Description: In this project-based course, student teams will complete semester-long data science research or analysis projects selected from a variety of disciplines and industries. Students will also learn best practices in data science. Instructor Permission Required. Cross-list: DSCI 535. Graduate/Undergraduate Equivalency: COMP 449. Mutually Exclusive: Cannot register for COMP 549 if student has credit for COMP 449. Repeatable for Credit.","COMP 360":"Description: 2D graphics techniques including fast line and curve drawing and polygon filling. 3D graphics problems including representation of solids, shading, and hidden surface elimination. Fractals, graphics standards. Graduate/Undergraduate Equivalency: COMP 560. Mutually Exclusive: Cannot register for COMP 360 if student has credit for COMP 560.","COMP 481":"Description: Finite automata, regular expressions, regular languages, pushdown automata, context-free languages, Turing machines, recursive languages, computability, and solvability. It is strongly recommended that students complete three semesters of Mathematics before enrolling in this course. Graduate/Undergraduate Equivalency: COMP 581. Mutually Exclusive: Cannot register for COMP 481 if student has credit for COMP 581.","COMP 361":"Description: Exploration of curves and surfaces (e.g. parametric form, implicit form, and conversion between forms), the representation of solid (e.g., wireframes, octrees, boundary representations, and constructive solid geometry), and applications (e.g., graphics, motion planning, simulation, and finite element mesh generation. Graduate/Undergraduate Equivalency: COMP 561. Repeatable for Credit.","COMP 480":"Description: This course will be ideal for someone wanting to build a strong foundation in the theory and practice of algorithms for processing Big-Data. We will discuss advanced data structures and algorithms going beyond deterministic setting and emphasize the role of randomness in getting significant, often exponential, improvements in computations and memory. Graduate/Undergraduate Equivalency: COMP 580. Recommended Prerequisite(s): COMP 382","COMP 238":"Description: Topics and credit hours vary each semester. Contact department for current semester\'s topic(s). Repeatable for Credit.","COMP 513":"Description: A modern computer is a system with enormous complexity in both software and hardware. The course presents the principles for managing such complexity using examples from modern computing systems. It covers emergent issues from system complexity such as energy efficiency, bug finding, and heterogeneous hardware. It also covers designing experiments and writing systems papers. The course consists of lectures, student presentation of classic papers, and a final project. Cross-list: ELEC 513.","COMP 514":"Description: The main focus of the course will be on smooth optimization techniques, with applications in machine learning and artificial intelligence. The course will introduce the basics of algorithms on continuous optimization, starting from the classical gradient descent algorithm in convex optimization, towards more sophisticated approaches in non-convex scenarios. The course will explore the fundamental theory, algorithms, complexity and approximations in nonlinear optimization. Graduate/Undergraduate Equivalency: COMP 414. Mutually Exclusive: Cannot register for COMP 514 if student has credit for COMP 414.","COMP 511":"Description: The design, definition and abstract implementation of programming languages including methods for precisely specifying syntax and semantics. Graduate/Undergraduate Equivalency: COMP 411. Mutually Exclusive: Cannot register for COMP 511 if student has credit for COMP 411.","COMP 512":"Description: Advanced topics in the design of an optimizing compiler. This course will focus on analysis and optimization of programs for uniprocessor machines, including program analysis (data-flow analysis, construction of static single-assignment form) and program transformation (redundancies, constant values, strength reduction, etc.). The course uses a variety of readings from the literature and includes an implementation project. Recommended Prerequisite(s): COMP 412 or COMP 506.","COMP 630":"Description: This course is an introduction to relational and other (NoSQL) database systems, SQL programming, and database design. This course will teach students how to understand trade-offs in database design, to create well-designed databases, and to develop proficiency in effectively managing data in a database. The course is focused on developing skills as a database designer and power-user. It also includes discussions of database implementation details to enable students to understand underlying system functionality and how that impacts decisions a database designer makes.","COMP 477":"Description: Topics/requirements/credit hours may vary each semester. Contact Department for curent semester\'s topic(s). Repeatable for Credit.","COMP 598":"Description: Introduction to the kinematics, dynamics, and control of robot manipulators and to applications of artificial intelligence and computer vision in robotics. Additional work requied for Graduate course. Cross-list: ELEC 598, MECH 598. Graduate/Undergraduate Equivalency: COMP 498. Mutually Exclusive: Cannot register for COMP 598 if student has credit for COMP 498.","COMP 519":"Description: Since the advent of Sanger Sequencing in 1977, computer scientists have been devising algorithms and software tools to interpret and analyze DNA sequences. The field of bioinformatics focuses on computational approaches to solving biological questions. This course will serve as an introduction to widely used algorithms in bioinformatics used for pattern searching, genome assembly, sequence alignment, and clustering of biological data. No prior knowledge of biology is assumed. The class involves several programming assignments. Graduate/Undergraduate Equivalency: COMP 416.","COMP 517":"Description: In this seminar, we will investigate advanced topics in the design and implementation of operating systems, including: OS structure (includingWeb Browsers), concurrency and synchronization, memory management, file systems and storage, virtual machines, and information protection. We will explore both fundamental and hot topics through reading, discussing, and presenting key research findings. This course will also cover methods for critiquing, writing, and presenting research findings through a course long project. Graduate/Undergraduate Equivalency: COMP 417. Mutually Exclusive: Cannot register for COMP 517 if student has credit for COMP 417.","COMP 515":"Description: Advanced compilation techniques for vector and parallel computer systems, including the analysis of program dependence, program transformations to enhance parallelism, compiler management of the memory hierarchy, interprocedural data flow analysis, and parallel debugging. Recommended Prerequisite(s): COMP 412.","COMP 516":"Description: This is a project-based class that provides students with the opportunity to apply their knowledge of distributed computing principles to designed and develop a single, large distributed application that utilizes the public cloud. Students will learn about the basic services for computing, storage, and commination that are supported by the new generation of \\"public utilities\\" that provide the infrastructure for the public cloud, and how to utilize these services to engineer a robust, scalable application.","COMP 130":"Description: An introduction to computation taught by solving real-world problems in architecture, statistics, linguistics, social networks, visual pattern recognition, and the simulation of complex systems in ecology. Technical topics include how to model computational artifacts operating in the world, how to design and implement algorithmic solutions in Python, and how to experimentally test and evaluate computational systems.","COMP 490":"Description: Theoretical and experimental investigation under staff direction. Instructor Permission Required. Repeatable for Credit.","COMP 370":"Description: Large accessible data sets have opened new frontiers in evolutionary biology, and many fields. Learn to write computer programs to test hypotheses and discover patterns in diverse data. Understand the most common strategies in evolutionary bioinformatics, including dynamic programming, hidden Markov models, and graphical algorithms. No previous programming experience required. Cross-list: EBIO 333. Recommended Prerequisite(s): MATH 101 and MATH 102.","COMP 491":"Description: A combination of in-service teaching and a seminar. Department Permission Required. Repeatable for Credit.","COMP 403":"Description: Our reliance on software of all forms is increasing by the day. As a result, it is more important than ever to ensure that programs function correctly and cannot be exploited by hostile adversaries. The field of formal methods takes on this challenge, developing algorithms and programming methodologies that can be used to formally reason about what happens when software executes on arbitrary inputs, often without actually executing the program. Such reasoning can be used, for example, to identify subtle bugs and vulnerabilities in programs, or to give mathematical proofs of program correctness. This is a hands-on introduction to the field of formal methods. In this class, you will learn the theoretical foundations of these systems; you will also implement a series of systems that can be used to reason about the correctness of C programs. Graduate/Undergraduate Equivalency: COMP 503. Mutually Exclusive: Cannot register for COMP 403 if student has credit for COMP 503.","COMP 524":"Description: Study of network protocols for mobile and wireless networking, particularly at the media access control, network, and transport protocol layers. Focus is on the unique problems and challenges presented by the properties of wireless transmission and host or router mobility. Cross-list: ELEC 524. Recommended Prerequisite(s): COMP 421 OR ELEC 421.","COMP 645":"Description: We will learn about and discuss recent advances in various areas in computer systems, including topics on security, distributed systems, networking, operating systems, and databases. The seminar will be divided into several sections, with each section focusing on one research trend. In each class, students will read one classic paper on the topic, and present two recent papers that describe the stat of the art. Students can also team up and do a semester-long research project on any relevant topics. All students will need to make a final presentation at the end of the class on a potential project idea; for students that choose to do a semester-long project, they will also submit a six-page report on their project, in addition to giving a final presentation. Instructor Permission Required. Cross-list: ELEC 692. Repeatable for Credit.","COMP 525":"Description: Virtualized computer architectures. Processor, memory and storage virtualization techniques. Resource allocation and scheduling of virtual machines. Cloud architectures and infrastructure. Utility computing. Cross-list: ELEC 525.","COMP 800":"Description: Repeatable for Credit.","COMP 522":"Description: Multi-core microprocessors are becoming the norm. The course will focus on emerging multi-core processor architectures and challenges to using them effectively. Topics include multi-core microprocessors, memory hierarchy, synchronization, programming systems, scheduling, and transactional memory.","COMP 643":"Description: This course is an introduction to modern data science. Data science is the study of how to extract actionable, non-trivial knowledge from data. The course will focus on software tools used by practitioners of modern data science, the mathematical and statistical models that are employed in conjunction with such software tools and the applications of these tools and systems to different problems and domains. In particular, this class explores the use of these tools and models in the analysis of \u201cbig\u201d data, that is datasets that are too large to be analyzed on a typical personal computer.","COMP 402":"Description: This course focuses on the principles and practices of test-driven software development, which have been popularized under the banner of \\"Extreme Programming.\\" To provide students with practical experience, the course engages students in the development of open source production programs written in JAVA or C#. The DRJAVA programming courses was developed by students in this course. Some of the major topics covered in course lectures include design patterns for controlling concurrency and refactoring transformations to improve legacy code. Graduate/Undergraduate Equivalency: COMP 501. Mutually Exclusive: Cannot register for COMP 402 if student has credit for COMP 501.","COMP 523":"Description: The course introduces students to modern cryptographic techniques, focusing mainly on mathematical tools. The course covers topics such as Diffie-Hellman key exchange, the ElGamal public key crypto system, integer factorization and RSA, and elliptic curves and lattices in cryptography.","COMP 487":"Description: In Computational Complexity we study the computational resources (time, space, communication, etc.) that are required to solve computational problems via various computational needs. Specifically, we are interested in classifying computational problems with classes of other problems that require similar amount of resources to solve. Graduate/Undergraduate Equivalency: COMP 587. Mutually Exclusive: Cannot register for COMP 487 if student has credit for COMP 587.","COMP 520":"Description: Distributed systems: workstations, local area networks, server machines. Multiprocess structuring and interprocess communication. File access and memory management. User interfaces: window systems and command interpreters. Case studies of selected distributed systems. Emphasis on performance aspects of system software design. Cross-list: ELEC 520.","COMP 521":"Description: Introduction to the design, construction, and analysis of concurrent programs with an emphasis on operating systems, including filing systems, schedulers, and memory allocators. Specific attention is devoted to process synchronization and communication within concurrent programs. Additional coursework required beyond the undergraduate course requirements. Cross-list: ELEC 552. Graduate/Undergraduate Equivalency: COMP 421. Mutually Exclusive: Cannot register for COMP 521 if student has credit for COMP 421.","COMP 642":"Description: Machine learning is the process of automatically inferring a function from a set of data. In essence, machine learning techniques seek to automate the inductive learning process that humans do so well. Furthermore, the availability of large training sets combined with significant computing power has made machine learning an extremely important body of knowledge across a large range of application domains. A small sample of some of the application domains include robotics, medicine, speech/facial recognition, and driving autonomous vehicles. This course will focus on providing a foundational understanding of modern algorithms in machine learning, focusing on practical applications.","COMP 485":"Description: This course will introduce basic principles of image acquisition, formation and processing of several medical imaging modalities such as X-Ray, CT, MRI, and US that are used to evaluate the human anatomy. The course also includes visits to a clinical site to gain experience with the various imaging modalities covered in class. Cross-list: BIOE 485, ELEC 485. Recommended Prerequisite(s): MATH 211 and MATH 212.","COMP 486":"Description: This course focuses on functional imaging modalities used specifically in nuclear medicine such as Gamma cameras, SPECT, and PET imaging. The course will introduce the basic principles of image acquisition, formation, processing and the clinical applications of these imaging modalities and lays the foundations for understanding the principles of radiotracer kinetic modeling. A trip to a clinical site in also planned to gain experience with nuclear medicine imaging. Cross-list: BIOE 486, ELEC 486.","COMP 640":"Description: A reading course covering the latest developments in statistical machine learning and pattern recognition. Recommended Prerequisite(s): COMP 440. Repeatable for Credit.","COMP 409":"Description: Logic has been called \\"the calculus of computer science\\". The argument is that logic plays a fundamental role in computer science, similar to that played by calculus in the physical sciences and traditional engineering disciplines. Indeed, logic plays an important role in areas of Computer Science as disparate as artificial intelligence (automated reasoning), architecture (logic gates), software engineering (specification and verification), programming languages (semantics, logic programming), databases (relational algebra and SQL), algorithms (complexity and expressiveness), and theory of computation (general notions of computability). Graduate/Undergraduate Equivalency: COMP 509. Mutually Exclusive: Cannot register for COMP 409 if student has credit for COMP 509.","COMP 528":"Description: System-level virtualization is an integral part of modern computer systems, spanning both hardware and software. This course will explore the various types of system-level virtualization and the hardware and software mechanisms that support them. The course will explore the interplay among hypervisors, operating systems, processors, memory, and I/O devices in modern virtualized systems.","COMP 408":"Description: The course will explore the mathematical underpinnings of reliable software. The students will learn how to use proof assistants to construct software along with a machine-checkable proof of its correctness. Basic concepts of logic, functional programming, static type systems and deductive verification will be covered. Graduate/Undergraduate Equivalency: COMP 548.","COMP 529":"Description: This course explores advanced solutions in computer networks that are driven by the need to go beyond the best-effort capabilities of the Internet. Topics include network fault tolerance, traffic engineering, scalable data center network architectures, network support for big data processing, network support for cloud computing, extensible network control via software defined networking, denial-of-service-attack defense mechanisms. Readings from original research papers. Also include design project and oral presentation components. This course assumes students already have a good understanding of the best-effort Internet. Cross-list: ELEC 529. Repeatable for Credit.","COMP 405":"Description: A topics-driven exploration of cutting-edge object oriented design issues and concepts including mutable recursive data frameworks, design patterns for sorting, parsing and games, service-oriented architectures and cloud computing. Detailed knowledge and practice in abstract structure and behavioral representations, delegation model programming, design patterns and Java are required. Graduate/Undergraduate Equivalency: COMP 505. Mutually Exclusive: Cannot register for COMP 405 if student has credit for COMP 505.","COMP 526":"Description: Design of high performance computer systems, including shared-memory and message-passing multiprocessors and vector systems. Hardware and software techniques to tolerate and reduce memory and communication latency. Case studies and performance simulation of high-performance systems. Cross-list: ELEC 526. Recommended Prerequisite(s): ELEC 425 or COMP 425","COMP 527":"Description: This class will focus on computer security in real systems. We will cover theory and practice for the design of secure systems (formal modeling, hardware and compiler-enforced safety, software engineering processes, tamper-resistant and tamper-reactive hardware, firewalls, cryptography, and more). Recommended Prerequisite(s): (COMP 311 or COMP 412) and (COMP 421 or COMP 429).","COMP 340":"Description: The course is an intermediate level course in data science for students at the sophomore level with some experience in programming and background in mathematics (calculus). The course teaches students to \u201cdo\u201d data science in Python using six modules to illustrate fundamental data science operations, data cleaning, model exploration, model formulation, model visualization, model communication. Recommended Prerequisite(s): COMP 182.","COMP 582":"Description: Methods for designing and analyzing computer algorithms and data structures. The focus of this course will be on the theoretical and mathematical aspects of algorithms and data structures. Cross-list: ELEC 512.","COMP 580":"Description: This course will be ideal for someone wanting to build a strong foundation in the theory and practice of algorithms for processing Big-Data. We will discuss advanced data structures and algorithms going beyond deterministic setting and emphasize the role of randomness in getting significant, often exponential, improvements in computations and memory. Graduate/Undergraduate Equivalency: COMP 480.","COMP 460":"Description: This project-based class involves teams of 2-4 CS and Visual Arts students designing and building computer games suitable for Xbox Live Arcade using C# and XNA. For CS students, Comp 160 or Comp 360 is recommended as a prerequisite. For Visual Arts students, previous experience in drawing using Photoshop is suggested. Instructor Permission Required. Cross-list: ARTS 460. Repeatable for Credit.","COMP 581":"Description: Finite automata, regular expressions, regular languages, pushdown automata, context-free languages, Turing machines, recursive languages, computability, and solvability. It is strongly recommended that students complete three semesters of Mathematics before enrolling in this course. Graduate/Undergraduate Equivalency: COMP 481. Mutually Exclusive: Cannot register for COMP 581 if student has credit for COMP 481.","COMP 182":"Description: Algorithms are the engines of a great majority of systems, natural and artificial alike. This course introduces algorithmic thinking as a discipline for reasoning about systems, taming their complexities, and elucidating their properties. Algorithmic techniques, along with their correctness and efficiency, will be taught through reasoning about systems of interactions, such as markets, that are ubiquitous in our highly connected world.","COMP 180":"Description: This class is designed for non-majors interested in a broader understanding of Computer Science and focuses on intermediate-level programming in Python as well as the basics of discrete math. The class concludes with an introduction to the process of Algorithmic Thinking. Note that COMP 180 cannot be substituted for COMP 182 as a pre-requisite for upper level CS classes. Instructor Permission Required.","COMP 613":"Description: This course covers important concepts of programming languages that are critical to understanding and constructing software artifacts. These concepts will be studied in the context of multiple programming paradigms, including functional and object-oriented programming. By using different paradigms, you will learn to think more deeply than in terms of a single approach or the syntax of one language. This course aims to provide a framework for understanding how to use language constructs effectively and how to design correct and elegant programs in any language.","COMP 610":"Description: This course focuses on modern principles for the construction of large-scale programs, with an emphasis on design patterns, modern programming tools, and team management. The material will be applied in a substantial software design/construction project. The course has a significant oral and written communication component where students will be required to document and present their software design.","COMP 215":"Description: This course covers the principles of programming and program design. The course is organized around a number of individual programming assignments that fit together to complete a significant, real-world application. Each assignment emphasizes one or more of the basic principles of software design, including: encapsulation, abstraction, test-driven development, and functional and object-oriented programming. The Java programming language will be used. An introduction to the basics of the Java language itself (including Java syntax and semantics) will be provided.","COMP 611":"Description: This course will cover a selection of topics from the areas of programming languages and formal methods. all students will read classical and recent papers on the selected topics and give presentations on them. A student may elect to perform a semester-long project on a topics related to the content of the course and write a short report on their findings. Repeatable for Credit.","COMP 696":"Description: A seminar course to introduce students to topics in Data Science at the interface between Statistics and Computer Science. Students participate in the process of preparing, delivering and critiquing talks. Topics change each semester. Instructor Permission Required. Cross-list: STAT 696. Graduate/Undergraduate Equivalency: COMP 496. Mutually Exclusive: Cannot register for COMP 696 if student has credit for COMP 496. Repeatable for Credit.","COMP 576":"Description: Deep Machine Learning has recently made many advances in difficult perceptual tasks, including object and phoneme recognition, and natural language processing. However, the field has a steep learning curve, both conceptually and practically. The point of this course is to engage students by jumping into the deep end, and building their own architectures and algorithms. Cross-list: ELEC 576.","COMP 573":"Description: This seminar introduces pre- and postdoctoral students in biomedical informatics to topics relevant to professional development in the discipline, which is no longer concentrated in labs as it was in its early days, but is now important in hospitals, outpatient clinics, companies and even the community. In these settings, researchers and practitioners are likely to encounter not only difficult technical challenges, but vexing problems of organizational change and development as well. We will consider some of these challenges, drawing on the insights of experts in psychology, organizational change, management and communications along with industry representatives and entrepreneurs. The seminar mixes lectures and readings with group and individual exercises. Instructor Permission Required. Repeatable for Credit.","COMP 694":"Description: Survey of the component and standards trends that are the basis of personal computers and digital appliances with the aim of predicting technologies, solutions, and new products five years into the future. Examples of these technologies are dual Core processors, iPods and their evolution, mobile wireless data devices, and even Google vs. Microsoft. Students will each pick a topic important to the digital lifestyle and through a series of one-on-one sessions develop a depth of understanding that is presented to the class. Formerly \\"Future Personal Computing Technologies.\\" Cross-list: ELEC 694.","COMP 591":"Description: A combination of in-service teaching and a seminar. Instructor Permission Required. Repeatable for Credit.","COMP 590":"Description: Advanced theoretical and experimental investigations under staff direction. The student must have a full-time internship to receive 4 credits for this course. Instructor Permission Required. Repeatable for Credit.","COMP 502":"Description: Review of major neural machine learning (Artificial Neural Network) paradigms. Analytical discussion of supervised and unsupervised neural learning algorithms and their relation to information theoretical methods. Practical applications to data analysis such as pattern recognition, clustering, classification, function approximation/regression, non-linear PCA, projection pursuit, independent component analysis, with lots of examples from image and digital processings. Details are posted at www.ece.rice.edu/~erzsebet/ANNcourse.html. Cross-list: ELEC 502, STAT 502. Recommended Prerequisite(s): ELEC 430 and ELEC 431 or equivalent or permission of instructor.","COMP 503":"Description: Our reliance on software of all forms is increasing by the day. As a result, it is more important than ever to ensure that programs function correctly and cannot be exploited by hostile adversaries. The field of formal methods takes on this challenge, developing algorithms and programming methodologies that can be used to formally reason about what happens when software executes on arbitrary inputs, often without actually executing the program. Such reasoning can be used, for example, to identify subtle bugs and vulnerabilities in programs, or to give mathematical proofs of program correctness. This is a hands-on introduction to the field of formal methods. In this class, you will learn the theoretical foundations of these systems; you will also implement a series of systems that can be used to reason about the correctness of C programs. Graduate/Undergraduate Equivalency: COMP 403. Mutually Exclusive: Cannot register for COMP 503 if student has credit for COMP 403.","COMP 621":"Description: Modern computer systems are designed and implemented in a layered fashion, wherein each layer builds upon those beneath it, providing abstractions for processing, memory, and I/O that are progressively more abstracted from the hardware and easier to use than those of the underlying layers. While this layered architecture has made building systems easier, it has also made understanding their behavior and performance more difficult. Every layer from the managed run-time environments used by modern programming languages to the hypervisor play a role in processor scheduling, memory management, and I/O, making it oftentimes difficult to pinpoint which layer of the system is interacting poorly with a program. This class will teach students about the fundamental characteristics of the abstractions for processing, memory, and I/O at each layer of a modern computer system, so that they might understand the functionality provided by each layer, and instruct them on the use of modern debugging, profiling, and tracing tools, so that they are equipped to characterize the behavior and performance of their programs.","COMP 105":"Description: This course provides credit for students who have successfully completed approved examinations, such as Advanced Placement exams. This credit counts toward the total credit hours required for graduation.","COMP 347":"Description: We will review, critique, and discuss computational methods and approaches for microbial forensics and infectious disease monitoring in the genomics era. The seminar will be divided into topic-specific sessions, focusing on emerging research trends and open challenges in the field. Graduate/Undergraduate Equivalency: COMP 547. Mutually Exclusive: Cannot register for COMP 347 if student has credit for COMP 547.","COMP 501":"Description: This course focuses on the principles and practices of test-driven software development, which have been popularized under the banner of \\"Extreme Programming.\\" To provide students with practical experience, the course engages students in the development of open source production programs written in JAVA or C#. The DRJAVA programming courses was developed by students in this course. Some of the major topics covered in course lectures include design patterns for controlling concurrency and refactoring transformations to improve legacy code. Graduate/Undergraduate Equivalency: COMP 402. Mutually Exclusive: Cannot register for COMP 501 if student has credit for COMP 402.","COMP 587":"Description: In Computational Complexity we study the computational resources (time, space, communication, etc.) that are required to solve computational problems via various computational needs. Specifically, we are interested in classifying computational problems with classes of other problems that require similar amount of resources to solve. Graduate/Undergraduate Equivalency: COMP 487. Mutually Exclusive: Cannot register for COMP 587 if student has credit for COMP 487.","COMP 620":"Description: Content varies at discretion of instructor. Repeatable for Credit.","COMP 100":"Description: An introduction to organizing, analyzing, and presenting information using databases and spreadsheets. No programming involved, and no computing background expected.","COMP 508":"Description: The course emphasizes the security of small embedded devices that are central to the Internet of Things (IoT) Era. We discuss the practical security attacks, challenges, constraints, and opportunities that arise in the IoT domain. Covered topics include security engineering, real world attacks, practical and side channel attacks, and hands-on lab/projects. Cross-list: ELEC 511. Repeatable for Credit.","COMP 509":"Description: Logic has been called \\"the calculus of computer science\\". The argument is that logic plays a fundamental role in computer science, similar to that played by calculus in the physical sciences and traditional engineering disciplines. Indeed, logic plays an important role in areas of Computer Science as disparate as artificial intelligence (automated reasoning), architecture (logic gates), software engineering (specification and verification), programming languages (semantics, logic programming), databases (relational algebra and SQL), algorithms (complexity and expressiveness), and theory of computation (general notions of computability). Graduate/Undergraduate Equivalency: COMP 409. Mutually Exclusive: Cannot register for COMP 509 if student has credit for COMP 409.","COMP 506":"Description: Topics in the design of programming language translators, including parsing, run-time storage management, error recovery, code generation and optimization. Graduate/Undergraduate Equivalency: COMP 412. Mutually Exclusive: Cannot register for COMP 506 if student has credit for COMP 412.","COMP 507":"Description: This course is a graduate-level introduction to computer-aided program design, a field that studies logical and algorithmic techniques for formally verifying programs, and mechanized derivation of programs that are correct by construction. Topics covered will include classical automated program verification in particular abstract interpretation and model checking - as well as recent developments in algorithmic program synthesis.","COMP 628":"Description: Many modern web services, such as Facebook or YouTube, rely on a set of computers that coordinate across a network. A networked system raises unique challenges, not the least of which is security. As applications can send messages to or receive messages from other remote applications, it is important to ensure that such network-facing programs are secure, even if parts of the system may not be trustworthy. This course will teach the concepts, architecture, and implementation of network applications that have high security assurance in the presence of threats. We will cover typical attacks, such as denial-of-service, remote exploits, as well as security practices that developers can adopt to address these challenges.","COMP 504":"Description: Discover how stat-of-the-art object-orient programming and design techniques can create globe-spanning software systems that are both flexible and scalable. Learn how software design patterns are used in multiple programming paradigms. Explore highly decoupled systems with dynamically configurable behaviors. Highly recommended for anyone interested in building large systems and software engineering. Basic proficiency in Java is required. Students may not receive credit for both COMP 310/510 and COMP 404/504. Mutually Exclusive: Cannot register for COMP 504 if student has credit for COMP 310/COMP 404/COMP 510.","COMP 625":"Description: It has become increasingly important to understand the underlying properties of modern computer architectures. System organization, including memory hierarchies, parallel processor organization, and interconnection networks can have a large impact on the performance of software systems. This course aims to provide a foundational understanding of key computer architecture concepts and their impact on performance.","COMP 505":"Description: A topics-driven exploration of cutting-edge object oriented design issues and concepts including mutable recursive data frameworks, design patterns for sorting, parsing and games, service-oriented architectures and cloud computing. Detailed knowledge and practice in abstract structure and behavioral representations, delegation model programming, design patterns and Java are required. Graduate/Undergraduate Equivalency: COMP 405. Mutually Exclusive: Cannot register for COMP 505 if student has credit for COMP 405.","COMP 560":"Description: A survey of core topics in Computer Graphics and Geometric Modeling, including fractals, ray tracing, hidden surface Algorithmic, Bezier, B-spline, blossoming techniques and subdivision procedures. Graduate/Undergraduate Equivalency: COMP 360. Mutually Exclusive: Cannot register for COMP 560 if student has credit for COMP 360.","COMP 440":"Description: This is a foundational course in artificial intelligence, the discipline of designing intelligent agents. The course will cover the design and analysis of agents that do the right thing in the face of limited information and computational resources. The course revolves around two main questions: how agents decide what to do, and how they learn from experience. Tools from computer science, probability theory, and game theory will be used. Interesting examples of intelligent agents will be covered, including poker playing programs, bots for various games (e.g. WoW), DS1 -- the spacecraft that performed an autonomous flyby of Comet Borrely in 2001, Stanley -- the Stanford robot car that won the Darpa Grand Challenge, Google Maps and how it calculates driving directions, face and handwriting recognizers, Fedex package delivery planners, airline fare prediction sites, and fraud detectors in financial transactions. Cross-list: ELEC 440. Graduate/Undergraduate Equivalency: COMP 557. Mutually Exclusive: Cannot register for COMP 440 if student has credit for COMP 557.","COMP 561":"Description: Exploration of curves and surfaces (e.g. parametric form, implicit form, and conversion between forms), the representation of solid (e.g., wireframes, octrees, boundary representations, and constructive solid geometry), and applications (e.g., graphics, motion planning, simulation, and finite element mesh generation. Graduate/Undergraduate Equivalency: COMP 361. Repeatable for Credit.","COMP 682":"Description: Algorithms are the recipes that underlie all computations executed by a computer. Designing new algorithms, proving their correctness, and analyzing their computational requirements are three foundational tasks in all areas of computer science. This course covers all these three aspects of algorithms. Topics covered include growth of functions, asymptotic notation and analysis, graphs and their properties, graph exploration, graph algorithms, greedy algorithms, divide-and-conquer algorithms, dynamic programming, NP-Completeness, and heuristic search algorithms.","COMP 162":"Description: Explore how modern game content is created, and how it interacts with the underlying technology. Beginning with an explanation of how games are developed and what role content plays in the process, the class will learn to use 3D Studio Max, Photoshop, and game-native scripting as they create working content for an established game project.","COMP 680":"Description: Probability and statistics are essential tools in computer science and data science. They are at the heart of areas such as efficiency analysis of algorithms and randomized algorithms and central to fields like bioinformatics, social informatics, and, of course, machine learning. Furthermore, probability and statistics are essential for data science, as they are the foundation for quantifying uncertainty and assessing support for hypotheses and derived models. This course covers topics in probability and statistics, including probability and random variables, basic stochastic processes, basic descriptive statistics, and various methods for statistical inference and measuring support.","COMP 160":"Description: This class covers the basics of Python Programming with a focus on building simple games in a web-based environment. The class includes an introduction to event-driven programming and trains the students in the specifics of a Python GUI system designed to support creating to support creating applications that run in a web browser. This course is limited to first-year students only. Continuing Students may register with an approved Special Registration Form. Recommended Prerequisite(s): Java Experience.","COMP 436":"Description: What is \u201ccloud computing?\u201d How do we build cloud-scale systems and components that are secure against malicious attacks, and scale to millions of users? Many of today\u2019s services run inside the cloud \u2013 a set of geographically distributed data centers running heterogeneous software stacks. Cloud systems must scale across tens of thousands of machines, support millions of concurrent requests, and they must do so with high security guarantees. This course will start with the fundamentals of cloud computing, introduce key techniques in building scalable and secure systems and expose students to state-of-the-art research advances as well as emerging security threats and defenses in today\u2019s cloud systems. Graduate/Undergraduate Equivalency: COMP 536. Mutually Exclusive: Cannot register for COMP 436 if student has credit for COMP 536.","COMP 557":"Description: This is a foundational course in artificial intelligence, the discipline of designing intelligent agents. The course will cover the design and analysis of agents that do the right thing in the face of limited information and computational resources. The course revolves around two main questions: how agents decide what to do, and how they learn from experience. Tools from computer science, probability theory, and game theory will be used. Interesting examples of intelligent agents will be covered, including poker playing programs, bots for various games (e.g. WoW), DS1 -- the spacecraft that performed an autonomous flyby of Comet Borrely in 2001, Stanley -- the Stanford robot car that won the Darpa Grand Challenge, Google Maps and how it calculates driving directions, face and handwriting recognizers, Fedex package delivery planners, airline fare prediction sites, and fraud detectors in financial transactions. Additional coursework required beyond the undergraduate course requirements. Cross-list: ELEC 557. Graduate/Undergraduate Equivalency: COMP 440. Mutually Exclusive: Cannot register for COMP 557 if student has credit for COMP 440.","COMP 316":"Description: This course, part of the HRC\u2019s Digital Humanities Initiative, is devoted to the virtual reconstruction of ancient urban landscapes with focus on individual buildings in their urban settings. All course activities will be based around interdisciplinary student teams who will work together through the semesters to complete a virtual reconstruction project. Instructor Permission Required. Cross-list: ANTH 346, ARCH 310, HART 316.","COMP 555":"Description: This course is an introduction to cyber-physical systems, engineering artifacts in which computational components interact with and typically control physical components. Some common examples of cyber-physical systems include robots, Segways and lane-departure warning, LDW, systems in automobiles. Graduate/Undergraduate Equivalency: COMP 451. Mutually Exclusive: Cannot register for COMP 555 if student has credit for COMP 451.","COMP 435":"Description: This multidisciplinary course will consider how elections are conducted to enhance participation, to accurately measure the will of the electorate, and to be sufficiently rigorous to convince all parties that the results are legitimate. This course will consider the design and evaluation of election technologies, ranging from voter registration through the polling booth and vote tabulation. This course will consider three questions: how do individual voters interact with the voting technology, how are voting technologies engineered to be accurate and secure, and how do the social aspects of voting fulfill democratic goals for elections? A central requirement for this course will be group research projects, many operating in our community, built around the November election. Cross-list: POLI 420, PSYC 420.","COMP 556":"Description: Network architectures, algorithms, and protocols. Local- and Wide-area networking. Intra- and inter-domain routing. Transmission reliability. Flow and congestion control. TCP/IP. Multicast. Quality of Service. Network Security - Networked applications. Additional coursework required beyond the undergraduate course requirements. Cross-list: ELEC 556. Graduate/Undergraduate Equivalency: COMP 429. Mutually Exclusive: Cannot register for COMP 556 if student has credit for COMP 429.","COMP 677":"Description: Topics and credit hours vary each semester. Contact department for current semester\'s topic(s). Repeatable for Credit.","COMP 311":"Description: An introduction to concepts, principles, and approaches of functional programming. Functional programming is a style of programming where the key means of computation is the application of functions to arguments (which themselves might be functions). This style of programming has become increasingly popular in recent years because it offers important advantages in designing, maintaining, and reasoning about programs in many modern contexts such as web services, multicore programming, and cluster computing. Course work consists of a series of programming assignments in the Scala programming language and various library extensions such as Apache Spark. Graduate/Undergraduate Equivalency: COMP 544. Mutually Exclusive: Cannot register for COMP 311 if student has credit for COMP 544.","COMP 554":"Description: Evolution of key architecture concepts found in advanced uniprocessor systems. Fundamental and advanced pipelining techniques and associated issues for improving processor performance. Illustrated with RISC processors such as the ARM processor. Examine several metrics for processor performance, such as Amdahl\u2019s law. Key concepts of data and program memory systems found in modern systems with memory hierarchies and cashes. Perform experiments in cache performance analysis. Influence of technology trends, such as Moore\u2019s law, on processor implementation Approaches for exploiting instruction level parallelism, such as VLIW. Introduction to parallel and multicore architectures. Introduction to processor architectures targeted for imbedded applications. Additional coursework required beyond the undergraduate course requirements. Cross-list: ELEC 554. Graduate/Undergraduate Equivalency: COMP 425. Mutually Exclusive: Cannot register for COMP 554 if student has credit for COMP 425.","COMP 430":"Description: Introduction to relational and other database systems, SQL programming, Database application programming, and Database design. Graduate/Undergraduate Equivalency: COMP 533. Mutually Exclusive: Cannot register for COMP 430 if student has credit for COMP 533.","COMP 310":"Description: Discover how state-of-the-art object-orient programming and design techniques can create globe-spanning software systems that are both flexible and scalable. Learn how software design patterns are used in multiple programming paradigms. Explore highly decoupled systems with dynamically configurable behaviors. Highly recommended for anyone interested in building large systems and software engineering. Mutually Exclusive: Cannot register for COMP 310 if student has credit for COMP 504.","COMP 431":"Description: In this project-based course, students create multi-user Web applications involving all aspects of application development from front-end and back-end programming to interfacing client-server communications technologies. Class time includes discussions of topics in Web development, structural frameworks, test driven development, and time for students to develop their Web applications. Graduate/Undergraduate Equivalency: COMP 531. Recommended Prerequisite(s): COMP 310 or COMP 321 Mutually Exclusive: Cannot register for COMP 431 if student has credit for COMP 531.","COMP 450":"Description: Robots have fascinated people for generations. Today, robots are built for applications as diverse as exploring remote planets, de-mining war zones, cleaning toxic waste, assembling cars, inspecting pipes in industrial plants and mowing lawns. Robots are also interacting with humans in a variety of ways: robots are museum guides, robots assist surgeon sin life threatening operations, and robotic cars can drive us around. The field of robotics studies not only the design of new mechanisms but also the development of artificial intelligence frameworks to make these mechanism useful in the physical world, integrating computer science, engineering, mathematics and more recently biology and sociology, in a unique way. This class will present fundamental algorithmic advances that enable today\u2019s robots to move in real environments and plan their actions. It will also explore fundamentals of the field of Artificial Intelligence through the prism of robotics. The class involves a significant programming project. Cross-list: ELEC 450, MECH 450. Graduate/Undergraduate Equivalency: COMP 550. Mutually Exclusive: Cannot register for COMP 450 if student has credit for COMP 550.","COMP 571":"Description: Pairwise and multiple sequence alignment, Markov chains and HMMs, Phylogenetic reconstruction, Haplotype inference, Computational models of RNA structure, Gene finding, Genome rearrangements, and comparative genomics. Cross-list: BIOC 571.","COMP 330":"Description: This course is an introduction to modern data science. Data science is the study of how to extract actionable, non-trivial knowledge from data. The proposed course will focus both on the software tools used by practitioners of modern data science, as well as the mathematical and statistical models that are employed in conjunction with such software tools. On the tools side, we will cover the basics of relational database systems, as well as modern systems for distributed computing based on MapReduce. On the models side, the course will cover standard supervised and unsupervised models for data analysis and pattern discovery. Graduate/Undergraduate Equivalency: COMP 543. Mutually Exclusive: Cannot register for COMP 330 if student has credit for COMP 543.","COMP 451":"Description: This course is an introduction to cyber-physical systems, engineering artifacts in which computational components interact with and typically control physical components. Some common examples of cyber-physical systems include robots, Segways and lane-departure warning, LDW, systems in automobiles. Graduate/Undergraduate Equivalency: COMP 555. Mutually Exclusive: Cannot register for COMP 451 if student has credit for COMP 555.","COMP 572":"Description: This course covers computational aspects of biological network analysis, a major theme in the area of systems biology. The course discusses protein-protein interaction, signaling, metabolic, and functional networks, and covers issues related to constructing, analyzing various types of networks, as well as how they can be used for downstream applications. Cross-list: BIOC 572, BIOE 564.","COMP 693":"Description: This course is a discussion based seminar about state of the art embedded and digital signal processing systems, with emphasis on both hardware architectures as well as software tools, programming models, and compilers. The seminar focuses on state of the art academic and commercial offerings in these areas. Cross-list: ELEC 693. Repeatable for Credit.","COMP 690":"Description: Repeatable for Credit.","COMP 290":"Description: Theoretical and experimental investigations under staff direction. Credit cannot be received for both COMP 290 and COMP 390. Instructor Permission Required. Equivalency: COMP 390. Mutually Exclusive: Cannot register for COMP 290 if student has credit for COMP 390. Repeatable for Credit.","COMP 326":"Description: Study of gates, flip-flops, combinational and sequential switching circuits, registers, logical and arithmetic operations, introduction to the Verilog hardware description language. Cross-list: ELEC 326.","COMP 447":"Description: An introduction to the basic concepts, algorithms and applications in computer vision. Topics include: cameras, camera models and imaging pipeline, low-level vision/image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, introduction to high-level vision tasks such as object recognition and face recognition. The course will involve programming and implementing basic computer vision algorithms in Matlab. Cross-list: ELEC 447. Graduate/Undergraduate Equivalency: COMP 546. Mutually Exclusive: Cannot register for COMP 447 if student has credit for COMP 345/COMP 546.","COMP 601":"Description: This is a seminar on technical writing and preparing publications for peer review. The focus is on conference papers, around 6-10 pages in length. The main topics are: 1) The structure of a conference publication, with guest lectures from the faculty. 2) Good daily writing habits with a group accountability system. 3) Editing techniques and the development a departmental \\"writing community\\" with interactive editing sessions. This course will cover a few topics from ENGI 600, but the main focus will be on short computer science conference documents and interactive peer editing. ENGI 600 is still the correct course to take for writing in general, thesis preparation, or journal publications. This course will complement COMP 600, and to develop the same community for writing as this class does for presentations. Repeatable for Credit.","COMP 327":"Description: This elective course covers a wide variety of topics in computer security, including hands-on experience with breaking software and engineering software to be harder to break. For example, students will perform buffer overflow attacks and exploit web application vulnerabilities, while also learning how to defend against them. Grades will be based on a series of in-class projects. Graduate/Undergraduate Equivalency: COMP 427, COMP 541. Mutually Exclusive: Cannot register for COMP 327 if student has credit for COMP 427/COMP 541.","COMP 448":"Description: Concrete mathematics is a blend of continuous and discrete mathematics. Major topics include sums, recurrences, integer functions, elementary number theory, binomial coefficients, generating functions, discrete probability and asymptotic methods. Cross-list: MATH 448.","COMP 602":"Description: Advanced topics in ANN theories, with a focus on learning high-dimensional complex manifolds with neural maps (Self-Organizing Maps, Learning Vector Quantizers and variants). Application to data mining, clustering, classification, dimension reduction, sparse representation. The course will be a mix of lectures and seminar discussions with active student participation, based on most recent research publications. Students will have access to professional software environment to implement theories. Cross-list: ELEC 602, STAT 602. Repeatable for Credit.","COMP 446":"Description: Connected mobile devices require updated programming models and design concepts to take advantage of their capabilities. We will explore applications primarily on the Apple iPhone and iPad but will also cover smart watches, Google Android and intelligent voice assistants like Amazon Echo and Google Home. We will briefly touch on the development of web services to support mobile applications. The course culminates with a large project taking up most of the second half of the semester. Although the curriculum centers around and teaches iOS and Xcode, final projects may be completed in any major mobile system including Android and Alexa, etc. Cross-list: ELEC 446. Recommended Prerequisite(s): COMP 310 or prior Object Oriented Programming experience highly recommended.","COMP 600":"Description: The seminar course meets weekly to discuss current research results by graduate students in the Computer Science Department. Senior Ph.D. Students are expected to present their research results. This course is open ONLY to MS and Ph.D. Students. MCS students may NOT take this course for credit without the consent of the instructor. Repeatable for Credit.","COMP 322":"Description: Fundamentals of parallel programming: abstract models of parallel computers, parallel algorithms and data structures, and common parallel programming patterns including task parallelism, undirected and directed synchronization, data parallelism, divide-and-conquer parallelism, and map-reduce. Laboratory assignments will explore these topics through the use of parallel extensions to the Java language. Cross-list: ELEC 323.","COMP 323":"Description: The course introduces students to modern cryptographic techniques, focusing mainly on mathematical tools. The course covers topics such as Diffie-Hellman key exchange, the ElGamal public key crypto system, integer factorization and RSA, and elliptic curves and lattices in cryptography","COMP 441":"Description: Learning from large dataset is becoming a ubiquitous phenomena in all applications spanning robotics, medical decisions, internet, communication, biology, etc. Designed to give senior UG students a thorough grounding in the theory and algorithms needed for research and practical applications in machine learning for modern massive datasets. Topics draw from machine learning, classical statistics, algorithms and information theory. Graduate/Undergraduate Equivalency: COMP 542. Mutually Exclusive: Cannot register for COMP 441 if student has credit for COMP 542.","COMP 200":"Description: Broad introduction to major topics in computer science. Includes algorithms, mathematical models of computation, machine organization and design, programming languages, communication, and artificial intelligence. This course is intended for majors outside of Science and Engineering.","COMP 321":"Description: This course introduces computer systems from the programmer\'s perspective. Topics include data representation, the compilation process, and system-level programming concepts such as interrupts and concurrency. Formerly COMP 221. Mutually Exclusive: Cannot register for COMP 321 if student has credit for COMP 221.","COMP 607":"Description: Methods, tools and theories for the computer-aided verification of concurrent systems. Repeatable for Credit.","COMP 449":"Description: In this project-based course, student teams will complete semester-long data science research or analysis projects selected from a variety of disciplines and industries. Students will also learn best practices in data science. Instructor Permission Required. Cross-list: DSCI 435. Graduate/Undergraduate Equivalency: COMP 549. Mutually Exclusive: Cannot register for COMP 449 if student has credit for COMP 549. Repeatable for Credit."}')},51:function(e){e.exports=JSON.parse('["COMP 100","COMP 105","COMP 130","COMP 140","COMP 160","COMP 162","COMP 180","COMP 182","COMP 200","COMP 215","COMP 238","COMP 290","COMP 300","COMP 301","COMP 310","COMP 311","COMP 316","COMP 321","COMP 322","COMP 323","COMP 326","COMP 327","COMP 330","COMP 340","COMP 347","COMP 360","COMP 361","COMP 370","COMP 380","COMP 382","COMP 390","COMP 402","COMP 403","COMP 405","COMP 408","COMP 409","COMP 410","COMP 411","COMP 412","COMP 413","COMP 414","COMP 415","COMP 416","COMP 417","COMP 420","COMP 421","COMP 422","COMP 424","COMP 425","COMP 427","COMP 429","COMP 430","COMP 431","COMP 435","COMP 436","COMP 440","COMP 441","COMP 446","COMP 447","COMP 448","COMP 449","COMP 450","COMP 451","COMP 460","COMP 477","COMP 480","COMP 481","COMP 485","COMP 486","COMP 487","COMP 490","COMP 491","COMP 496","COMP 498","COMP 501","COMP 502","COMP 503","COMP 504","COMP 505","COMP 506","COMP 507","COMP 508","COMP 509","COMP 511","COMP 512","COMP 513","COMP 514","COMP 515","COMP 516","COMP 517","COMP 519","COMP 520","COMP 521","COMP 522","COMP 523","COMP 524","COMP 525","COMP 526","COMP 527","COMP 528","COMP 529","COMP 530","COMP 531","COMP 532","COMP 533","COMP 534","COMP 535","COMP 536","COMP 538","COMP 539","COMP 540","COMP 541","COMP 542","COMP 543","COMP 544","COMP 545","COMP 546","COMP 547","COMP 548","COMP 549","COMP 550","COMP 554","COMP 555","COMP 556","COMP 557","COMP 560","COMP 561","COMP 571","COMP 572","COMP 573","COMP 576","COMP 580","COMP 581","COMP 582","COMP 587","COMP 590","COMP 591","COMP 598","COMP 600","COMP 601","COMP 602","COMP 607","COMP 610","COMP 611","COMP 613","COMP 620","COMP 621","COMP 625","COMP 628","COMP 630","COMP 640","COMP 642","COMP 643","COMP 645","COMP 650","COMP 665","COMP 677","COMP 680","COMP 682","COMP 690","COMP 693","COMP 694","COMP 696","COMP 800"]')},85:function(e,t,a){e.exports=a(93)},93:function(e,t,a){"use strict";a.r(t);var i=a(0),n=a.n(i),s=a(7),o=a.n(s),r=a(56),l=a(32),c=a(31),d=a(51),u=a(10),p=a(12),m=a(125),h=a(131),g=a(130),f=a(132),C=a(128),y=a(127),v=a(129),M=a(122),P=function(e){var t=Object(i.useRef)(),a=Object(i.useRef)();Object(i.useEffect)((function(){var i=window.innerHeight<800?window.innerHeight:800,n=window.innerWidth<1300?window.innerWidth:1300,s=p.d(t.current).attr("width",n).attr("height",i).append("g").attr("transform","translate(40, 40)"),o=p.a().size([i-100,n-100]),r=p.c(e.tree,(function(e){return e.children}));o(r),s.selectAll("path").data(r.descendants().slice(1)).enter().append("path").attr("d",(function(e){return"M"+e.y+","+e.x+"C"+(e.parent.y+25)+","+e.x+" "+(e.parent.y+120)+","+e.parent.x+" "+e.parent.y+","+e.parent.x})).style("fill","none").attr("stroke",(function(e){return"or"===e.parent.data.name?"green":"red"})).attr("stroke-width",3);var l=p.d("body").append("div").attr("id","tooltip").style("position","absolute").style("z-index","10").style("visibility","hidden").style("background-color","white").style("border","solid").style("border-width","2px").style("border-radius","2px").style("padding","5px");s.selectAll("g").data(r.descendants()).enter().append("g").attr("transform",(function(e){return"translate("+e.y+","+e.x+")"})).on("click",(function(a,i){"or"!==a.data.name&&"and"!==a.data.name&&c[a.data.name]&&(p.d(t.current).select("g").remove(),p.d("body").selectAll("#tooltip").remove(),e.newSearch(a.data.name))})).on("mouseover",(function(e){return c[e.data.name]?l.style("visibility","visible").text(c[e.data.name]):"or"!==e.data.name||"and"!==e.data.name?l.style("visibility","visible").text("Description: Class Description not available."):void 0})).on("mousemove",(function(e){if("or"!==e.data.name||"and"!==e.data.name)return l.style("top",p.b.pageY-10+"px").style("left",p.b.pageX+10+"px")})).on("mouseout",(function(e){return l.style("visibility","hidden")})).attr("cursor",(function(e){return"or"===e.data.name||"and"===e.data.name?"none":"pointer"})).append("ellipse").attr("rx",(function(e){return"or"===e.data.name||"and"===e.data.name?15:30})).attr("ry",(function(e){return"or"===e.data.name||"and"===e.data.name?14:15})).style("fill","#f9f9f9").attr("stroke","black").attr("stroke-width",2),s.selectAll("g").append("text").text((function(e){return e.data.name})).attr("dx",(function(e){return"or"===e.data.name?-6:"and"===e.data.name?-9:-28})).attr("dy",3).style("font-size",12);var d=1===e.order.length?0:Math.floor((n-100)/(e.order.length-1)),u=e.order.reduce((function(e,t){return e.length?e.push({data:t,x:e[e.length-1].x+d}):e.push({data:t,x:0}),e}),[]),m=u[u.length-1].x,h=p.d(a.current).attr("width",n).attr("height",200).append("g").attr("transform","translate(40, 100)");h.append("line").attr("x1",0).attr("y1",0).attr("x2",m).attr("y2",0).attr("stroke","black").attr("stroke-width",2),h.selectAll("g").data(u).enter().append("g").attr("transform",(function(e){return"translate("+e.x+",0)"})).on("mouseover",(function(e){return c[e.data]?l.style("visibility","visible").text(c[e.data]):l.style("visibility","visible").text("Description: Class Description not available.")})).on("mousemove",(function(e){return l.style("top",p.b.pageY-10+"px").style("left",p.b.pageX+10+"px")})).on("mouseout",(function(e){return l.style("visibility","hidden")})).attr("cursor",(function(e){return"pointer"})).append("circle").attr("r",30).style("fill","#f9f9f9").style("stroke","black").style("stroke-width",2),h.selectAll("g").append("text").text((function(e){return e.data})).attr("dx",-27).attr("dy",3).style("font-size",12)}));var s=Object(M.a)((function(e){return{root:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",paddingTop:window.innerHeight/20},button:{width:"100px"},paper:{marginTop:"20px",marginLeft:"20px"},title:{marginLeft:"20px",marginTop:"20px",fontSize:"20px"}}}))();return n.a.createElement("div",{className:s.root},n.a.createElement(C.a,{variant:"outlined",onClick:e.returnSearch,className:s.button},"Return"),n.a.createElement(y.a,{className:s.paper},n.a.createElement(v.a,{variant:"h1",className:s.title},"Topological Ordering (Optimal)"),n.a.createElement("svg",{ref:a})),n.a.createElement(y.a,{className:s.paper},n.a.createElement(v.a,{variant:"h1",className:s.title},"Prerequisites Tree (And-Or, No Repeats)"),n.a.createElement("svg",{ref:t})))},O=function(){var e=Object(i.useState)(""),t=Object(l.a)(e,2),a=t[0],s=t[1],o=Object(i.useState)(!0),c=Object(l.a)(o,2),p=c[0],y=c[1],v=Object(i.useState)(),O=Object(l.a)(v,2),w=O[0],b=O[1],E=Object(i.useState)(),T=Object(l.a)(E,2),x=T[0],D=T[1],q=Object(i.useState)([]),k=Object(l.a)(q,2),A=k[0],S=k[1],L=function(){if(u[a]){var e=new Set,t={name:a};e.add(a);u[a].type&&(t.children=[],function t(a,i){if("leaf"===a.type)if(e.has(a.val))i.push({name:a.val});else if(u[a.val]&&u[a.val].type){e.add(a.val);var n=[];t(u[a.val],n),i.push({name:a.val,children:n})}else i.push({name:a.val}),e.add(a.val);else{var s=[];a.val.forEach((function(e){t(e,s)})),i.push({name:a.type,children:s})}}(u[a],t.children));var i=[];e=new Set;!function t(a){if(!e.has(a)){if(u[a]&&!u[a].type||"COMP"!==a.substring(0,4));else if("leaf"===u[a].type)e.has(u[a].val)||t(u[a].val);else if("or"===u[a].type){for(var n=u[a].val,s=!1,o=0;o<n.length;o++)if(e.has(n[o].val)){s=!0;break}if(!s){for(var r=!1,l=0;l<n.length;l++)if(u[n[l].val]){t(n[l].val),r=!0;break}r||(i.push(n[0].val),e.add(n[0].val))}}else"and"===u[a].type&&u[a].val.forEach((function(a){if("leaf"===a.type)t(a.val);else if("or"===a.type){for(var n=a.val,s=!1,o=0;o<n.length;o++)if(e.has(n[o].val)){s=!0;break}if(!s){for(var r=!1,l=0;l<n.length;l++)if(u[n[l].val]){t(n[l].val),r=!0;break}r||(i.push(n[0].val),e.add(n[0].val))}}}));i.push(a),e.add(a)}}(a),S(i),D(!1),b(t),y(!1)}else D(!0)},I=Object(M.a)((function(e){return{root:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",paddingTop:window.innerHeight/6},button:{width:"100px"},select:{width:"100px"}}}))();return n.a.createElement(n.a.Fragment,null,p?n.a.createElement("form",{className:I.root},n.a.createElement(m.a,{variant:"outlined",className:I.select,error:x},n.a.createElement(h.a,{id:"demo-simple-select-outlined-label"},"Course"),n.a.createElement(g.a,{labelId:"demo-simple-select-outlined-label",id:"demo-simple-select-outlined",value:a,onChange:function(e){e.preventDefault(),s(e.target.value)},label:"Course Title"},n.a.createElement(f.a,{value:""},n.a.createElement("em",null,"None")),d.map((function(e){return n.a.createElement(f.a,{value:e},e)})))),n.a.createElement(C.a,{variant:"outlined",onClick:function(e){e.preventDefault(),L()},className:I.button},"Submit")):n.a.createElement("div",null,n.a.createElement(P,{order:A,tree:Object(r.a)({},w),newSearch:function(e){y(!0),s(e),L()},returnSearch:function(){y(!0)}})))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(O,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[85,1,2]]]);
//# sourceMappingURL=main.051a986a.chunk.js.map