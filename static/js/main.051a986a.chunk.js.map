{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["SVG","props","ref","useRef","ref2","useEffect","height","window","innerHeight","width","innerWidth","svg","d3","current","attr","append","cluster","size","root","tree","d","children","selectAll","data","descendants","slice","enter","y","x","parent","style","name","tooltip","on","i","classList","select","remove","newSearch","text","pageY","pageX","gap","order","length","Math","floor","reduce","acc","cur","push","stop","svg2","classes","makeStyles","theme","display","flexDirection","justifyContent","alignItems","paddingTop","button","paper","marginTop","marginLeft","title","fontSize","useStyles","className","Button","variant","onClick","returnSearch","Paper","Typography","App","useState","course","setCourse","search","setSearch","setTree","error","setError","topological","setTopological","onSearch","visited","Set","hierarchy","add","type","buildHierarchy","node","hierarchyNode","has","val","forEach","top","curCourse","substring","found","chosen","child","Fragment","FormControl","InputLabel","id","Select","labelId","value","onChange","e","preventDefault","target","label","MenuItem","classTitleList","map","newCourse","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.051a986a.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\n\nimport classList from './data/classList.json'\nimport classTitleList from './data/classTitleList.json'\nimport data from './data/classes.json'\n\nimport * as d3 from 'd3'\n\nimport {\n  Select,\n  FormControl,\n  Button,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Typography\n} from '@material-ui/core'\n\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst App = () => {\n  const [course, setCourse] = useState(\"\");\n  const [search, setSearch] = useState(true);\n  const [tree, setTree] = useState();\n  const [error, setError] = useState();\n  const [topological, setTopological] = useState([]);\n\n  const onSearch = () => {\n\n    if (data[course]) {\n      let visited = new Set()\n      \n      let hierarchy = {\"name\": course}\n\n      visited.add(course)\n\n      const buildHierarchy = (node, hierarchyNode) => {\n        if (node.type === \"leaf\") {\n          if (!visited.has(node.val)) {\n            if (data[node.val] && data[node.val].type) {\n              visited.add(node.val)\n              let children = []\n              buildHierarchy(data[node.val], children)\n              hierarchyNode.push({\n                \"name\": node.val,\n                \"children\": children,\n              })\n            } else {\n              hierarchyNode.push({\n                \"name\": node.val\n              })\n              visited.add(node.val)\n            }  \n          } else {\n            hierarchyNode.push({\n              \"name\": node.val,\n            })\n          }\n        } else {\n          let children = []\n          node.val.forEach(cur => {\n            buildHierarchy(cur, children)\n          })\n          hierarchyNode.push({\n            \"name\": node.type,\n            \"children\": children\n          })\n        }\n      }\n\n      if (data[course].type) {\n        hierarchy[\"children\"] = []\n        buildHierarchy(data[course], hierarchy[\"children\"])\n      }\n\n      // topological sort\n\n      let order = []\n      visited = new Set()\n\n      const top = (curCourse) => {\n        if (!visited.has(curCourse)) {\n          if ((data[curCourse] && !data[curCourse].type) || curCourse.substring(0, 4) !== \"COMP\") {\n          } else if (data[curCourse].type === \"leaf\") {\n            if (!visited.has(data[curCourse].val)) {\n              top(data[curCourse].val)\n            }\n          } else if (data[curCourse].type === \"or\") {\n            const children = data[curCourse].val\n            let found = false\n            for (let i = 0; i < children.length; i++) {\n              if (visited.has(children[i].val)) {\n                found = true\n                break\n              }\n            }\n            if (!found) {\n              let chosen = false\n              for (let i = 0; i < children.length; i++) {\n                if (data[children[i].val]) {\n                  top(children[i].val)\n                  chosen = true\n                  break\n                }\n              } \n              if (!chosen) {\n                order.push(children[0].val)\n                visited.add(children[0].val)\n              }\n            }\n          } else if (data[curCourse].type === \"and\") {\n            data[curCourse].val.forEach(child => {\n              if (child.type === \"leaf\") {\n                top(child.val)\n              } else if (child.type === \"or\") {\n                const children = child.val\n                let found = false\n                for (let i = 0; i < children.length; i++) {\n                  if (visited.has(children[i].val)) {\n                    found = true\n                    break\n                  }\n                }\n                if (!found) {\n                  let chosen = false\n                  for (let i = 0; i < children.length; i++) {\n                    if (data[children[i].val]) {\n                      top(children[i].val)\n                      chosen = true\n                      break\n                    }\n                  }\n                  if (!chosen) {\n                    order.push(children[0].val)\n                    visited.add(children[0].val)\n                  }\n                }\n              } \n            })\n          }\n          order.push(curCourse)\n          visited.add(curCourse)\n        }\n      }\n\n      top(course)\n      setTopological(order)\n      setError(false)\n      setTree(hierarchy)\n      setSearch(false)\n    } else {\n      setError(true)\n    }\n  }\n\n  const searchHandler = e => {\n    e.preventDefault()\n    onSearch()\n  }\n\n  const changeHandler = e => {\n    e.preventDefault()\n    setCourse(e.target.value)\n  }\n\n  const newSearch = (newCourse) => {\n    setSearch(true)\n    setCourse(newCourse)\n    onSearch()\n  }\n\n  const returnSearch = () => {\n    setSearch(true)\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingTop: window.innerHeight / 6,\n    },\n    button: {\n      width: '100px'\n    },\n    select: {\n      width: '100px'\n    }\n  }));\n\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      {search ? (\n        <form className={classes.root}>\n          <FormControl variant=\"outlined\" className={classes.select} error={error}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Course</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={course}\n              onChange={changeHandler}\n              label=\"Course Title\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {classTitleList.map(title => {\n                return <MenuItem value={title}>{title}</MenuItem>\n              })}\n            </Select>\n          </FormControl>\n          <Button variant=\"outlined\" onClick={searchHandler} className={classes.button}>\n            Submit\n          </Button>\n        </form>\n      ) : (\n        <div>\n          <SVG \n            order={topological}\n            tree={{...tree}} \n            newSearch={newSearch}\n            returnSearch={returnSearch}\n          />\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst SVG = (props) => {\n  const ref = useRef()\n  const ref2 = useRef()\n\n  useEffect(() => {\n\n    const height = window.innerHeight < 800 ? window.innerHeight : 800\n    const width = window.innerWidth < 1300 ? window.innerWidth : 1300\n\n    const svg = d3.select(ref.current)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n        .attr(\"transform\", \"translate(40, 40)\")\n\n    const cluster = d3.cluster()\n      .size([height - 100, width - 100])\n\n    const root = d3.hierarchy(props.tree, d => {\n      return d.children\n    })\n\n    cluster(root)\n\n    svg.selectAll('path')\n      .data(root.descendants().slice(1))\n      .enter()\n      .append('path')\n        .attr('d', d => {\n          return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.parent.y + 25) + \",\" + d.x\n            + \" \" + (d.parent.y + 120) + \",\" + d.parent.x // 50 and 150 are coordinates of inflexion, play with it to change links shape\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n        })\n        .style('fill', \"none\")\n        .attr('stroke', d => {\n          if (d.parent.data.name === \"or\") {\n            return \"green\"\n          } else {\n            return \"red\"\n          }\n        })\n        .attr('stroke-width', 3)\n\n    let tooltip = d3.select('body')\n      .append('div')\n      .attr('id', 'tooltip')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('visibility', 'hidden')\n      .style('background-color', 'white')\n      .style('border', 'solid')\n      .style('border-width', '2px')\n      .style('border-radius', '2px')\n      .style('padding', '5px')\n\n    svg.selectAll('g')\n      .data(root.descendants())\n      .enter()\n      .append('g')\n        .attr('transform', d => {\n          return \"translate(\" + d.y + \",\" + d.x + \")\"\n        })\n        .on('click', (d, i) => {\n          if (d.data.name !== \"or\" && d.data.name !== \"and\" && classList[d.data.name]) {\n            d3.select(ref.current).select('g').remove()\n            d3.select('body').selectAll('#tooltip').remove()\n            props.newSearch(d.data.name)\n          }\n        })\n        .on('mouseover', (d) => {\n          if (classList[d.data.name]) {\n            return tooltip\n              .style('visibility', 'visible')\n              .text(classList[d.data.name])\n          } else if (d.data.name !== \"or\" || d.data.name !== \"and\") {\n            return tooltip\n              .style('visibility', 'visible')\n              .text('Description: Class Description not available.')\n          }\n        })\n        .on('mousemove', (d) => {\n          if (d.data.name !== \"or\" || d.data.name !== \"and\") {\n            return tooltip\n              .style('top', (d3.event.pageY - 10) + 'px')\n              .style('left', (d3.event.pageX + 10) + 'px') \n          }\n        })\n        .on('mouseout', (d) => {\n          return tooltip\n            .style('visibility', 'hidden')\n        })\n        .attr('cursor', d => {\n          if (d.data.name === \"or\" || d.data.name === \"and\") {\n            return \"none\"\n          } else {\n            return \"pointer\"\n          }\n        })\n        .append('ellipse')\n          .attr('rx', d => {\n            if (d.data.name === \"or\" || d.data.name === \"and\") {\n              return 15\n            } else {\n              return 30\n            }\n          })\n          .attr('ry', d => {\n            if (d.data.name === \"or\" || d.data.name === \"and\") {\n              return 14\n            } else {\n              return 15\n            }\n          })\n          .style('fill', '#f9f9f9')\n          .attr('stroke', 'black')\n          .attr('stroke-width', 2)\n      \n    svg.selectAll('g')\n      .append('text')\n        .text(d => {\n          return d.data.name\n        })\n        .attr('dx', d => {\n          if (d.data.name === \"or\") {\n            return -6\n          } else if (d.data.name === \"and\") {\n            return -9\n          } else {\n            return -28\n          }\n        })\n        .attr('dy', 3)\n        .style('font-size', 12)\n\n    const gap = props.order.length === 1 ? 0 : Math.floor((width - 100) / (props.order.length - 1))\n    const data = props.order.reduce((acc, cur) => {\n      if (!acc.length) {\n        acc.push({\n          data: cur,\n          x: 0\n        })\n      } else {\n        acc.push({\n          data: cur,\n          x: acc[acc.length - 1].x + gap\n        })\n      }\n      return acc\n    }, [])\n\n    const start = 0\n    const stop = data[data.length - 1].x\n\n    const svg2 = d3.select(ref2.current)\n      .attr('width', width)\n      .attr('height', 200)\n      .append('g')\n        .attr(\"transform\", \"translate(40, 100)\")\n    \n    svg2.append('line')\n      .attr('x1', start)\n      .attr('y1', 0)\n      .attr('x2', stop)\n      .attr('y2', 0)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2)\n    \n    svg2.selectAll('g')\n      .data(data)\n      .enter()\n      .append('g')\n        .attr('transform', d => {\n          return \"translate(\" + d.x + \",\" + 0 + \")\"\n        })\n        .on('mouseover', (d) => {\n          if (classList[d.data]) {\n            return tooltip\n              .style('visibility', 'visible')\n              .text(classList[d.data])\n          } else {\n            return tooltip\n              .style('visibility', 'visible')\n              .text('Description: Class Description not available.')\n          }\n        })\n        .on('mousemove', (d) => {\n          return tooltip\n            .style('top', (d3.event.pageY - 10) + 'px')\n            .style('left', (d3.event.pageX + 10) + 'px') \n        })\n        .on('mouseout', (d) => {\n          return tooltip\n            .style('visibility', 'hidden')\n        })\n        .attr('cursor', d => {\n          return \"pointer\"\n        })\n        .append('circle')\n          .attr('r', 30)\n          .style('fill', '#f9f9f9')\n          .style('stroke', 'black')\n          .style('stroke-width', 2)\n      \n    svg2.selectAll('g')\n      .append('text')\n        .text(d => {\n          return d.data\n        })\n        .attr('dx', -27)\n        .attr('dy', 3)\n        .style('font-size', 12)\n      \n  })\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      paddingTop: window.innerHeight / 20\n    },\n    button: {\n      width: '100px'\n    },\n    paper: {\n      marginTop: '20px',\n      marginLeft: '20px',\n    },\n    title: {\n      marginLeft: '20px',\n      marginTop: '20px',\n      fontSize: '20px'\n    }\n  }));\n\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={props.returnSearch} className={classes.button}>\n        Return\n      </Button>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h1\" className={classes.title}>\n          Topological Ordering (Optimal)\n        </Typography>\n        <svg ref={ref2}></svg>\n      </Paper>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h1\" className={classes.title}>\n          Prerequisites Tree (And-Or, No Repeats)\n        </Typography>\n        <svg ref={ref}></svg>\n      </Paper>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}